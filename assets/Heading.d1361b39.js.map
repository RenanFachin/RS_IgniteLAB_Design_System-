{"version":3,"file":"Heading.d1361b39.js","sources":["../../src/components/Heading.tsx"],"sourcesContent":["// Importando o clsx\nimport { clsx } from 'clsx'\n\n// Importando o radix-react-slot\nimport { Slot } from '@radix-ui/react-slot'\n\nimport { ReactNode } from 'react'\n\n// Definindo as variantes deste componente (size,)\n// ?: quer dizer que é uma propriedade opcional\n// Children será o texto de fato. ReactNode pode receber qualquer coisa\n// É necessário fazer o export para que seja possível receber dentro do storyBook como args\nexport interface HeadingProps {\n    size?: 'sm' | 'md' | 'lg';\n    children: ReactNode;\n    asChild?: boolean;\n    className?: string;\n}\n\n// { size = 'md'} -> Define que o padrão a ser utilizado é o md\nexport function Heading({ size = 'md', children, asChild, className}: HeadingProps){\n    // Caso esteja sendo recebida a propriedade asChild\n    // Se sim, o componente será um <Slot>. \n    // Se não, o componente será um <Span>\n    const Component = asChild ? Slot : 'h2'\n\n    return(\n        <Component \n            className={clsx(\n                // Definições padrões\n                'text-gray-100 font-bold font-sans',\n                {\n                    // Aplicar o texto xs caso o text do component for definido com o sm\n                    'text-lg': size === 'sm',\n                    'text-xl': size === 'md',\n                    'text-2xl': size === 'lg',\n                },\n                className,\n            )}\n        >\n            {children}\n        </Component>\n    )\n}"],"names":["Heading","size","children","asChild","_jsx","Slot","clsx","className","__name"],"mappings":"qNAoBO,SAAAA,EAAA,CAAiB,KAAAC,EAAA,KAAS,SAAAC,EAAMA,QAAAA,EAAUC,UAAAA,CAAgC,EAAA,CAM7E,OAAAC,EAFAD,EAAAE,EAAA,KAEA,CACc,UAAAC,EACKA,oCAEP,CACA,UAAAL,IAAA,KAEwB,UAAAA,IAAA,KACA,WAAAA,IAAA,IACC,EACzBM,CACAA,EAAS,SAAAL,CACX,CAAA,CAKd,CAvBOM,EAAAR,EAAA"}